local ScreenGui = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("CustomDraggableGui")

if ScreenGui then
    ScreenGui:Destroy()
end

local function createGui()
    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local TextBox = Instance.new("TextBox")
    local StartButton = Instance.new("TextButton")
    local UICorner1 = Instance.new("UICorner")
    local UICorner2 = Instance.new("UICorner")
    local UICorner3 = Instance.new("UICorner")

    -- Parent
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- ScreenGui properties
    ScreenGui.Name = "CustomDraggableGui"
    ScreenGui.ResetOnSpawn = false

    -- Frame properties
    Frame.Name = "MainFrame"
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0.5, -100, 0.5, -75)
    Frame.Size = UDim2.new(0, 200, 0, 100) -- Adjusted size to fit TextBox and StartButton
    Frame.Draggable = true
    Frame.Active = true
    Frame.Selectable = true

    UICorner1.Parent = Frame

    -- TextBox properties
    TextBox.Name = "TextBox"
    TextBox.Parent = Frame
    TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextBox.BorderSizePixel = 0
    TextBox.Position = UDim2.new(0.1, 0, 0.1, 0)
    TextBox.Size = UDim2.new(0.8, 0, 0.3, 0)
    TextBox.Font = Enum.Font.SourceSans
    TextBox.PlaceholderText = "Enter text here"
    TextBox.Text = ""
    TextBox.TextColor3 = Color3.fromRGB(0, 0, 0)
    TextBox.TextSize = 18

    UICorner2.Parent = TextBox

    -- StartButton properties
    StartButton.Name = "StartButton"
    StartButton.Parent = Frame
    StartButton.BackgroundColor3 = Color3.fromRGB(100, 100, 255)
    StartButton.BorderSizePixel = 0
    StartButton.Position = UDim2.new(0.1, 0, 0.6, 0)
    StartButton.Size = UDim2.new(0.8, 0, 0.3, 0)
    StartButton.Font = Enum.Font.SourceSans
    StartButton.Text = "Start"
    StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    StartButton.TextSize = 18
    
    UICorner3.Parent = StartButton
    
    -- Function to scan active players
    local function scanPlayers(query)
        local players = game.Players:GetPlayers()
        local matches = {}

        for _, player in ipairs(players) do
            if string.find(player.Name:lower(), query:lower()) or string.find(player.DisplayName:lower(), query:lower()) then
                table.insert(matches, player.Name)
            end
        end

        return matches
    end

    -- Auto-complete function
    local function autoComplete()
        local inputText = TextBox.Text
        local matches = scanPlayers(inputText)

        if #matches == 1 then
            TextBox.Text = matches[1]
            TextBox.TextEditable = false
        end
    end

    -- Event to handle text input changes
    TextBox:GetPropertyChangedSignal("Text"):Connect(function()
        autoComplete()
    end)

    -- Print the target's username when Enter is pressed
    TextBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local targetUsername = TextBox.Text
            if game.Players:FindFirstChild(targetUsername) then
                print("Target player found: " .. targetUsername)
            else
                print("No matching player found.")
            end
        end
    end)

    -- Mouse click event for StartButton
    StartButton.MouseButton1Click:Connect(function()
    local RunService = game:GetService("RunService")



-- Initial animation setup
local SpinAnim = Instance.new("Animation")
SpinAnim.AnimationId = "rbxassetid://188632011" -- Spin animation

local player = game.Players.LocalPlayer
local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
local spinTrack = humanoid:LoadAnimation(SpinAnim)

-- Function to play the spin animation
local function playSpinAnimation()
    spinTrack.Looped = true
    spinTrack:Play(.1, 1, 2)
end

-- Function to stop the spin animation
local function stopSpinAnimation()
    spinTrack:Stop()
end

-- Existing Script (Runs first)

-- Function to move the character upward
local function moveCharacterUp()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Disable Animate script
if character.Animate then
    character.Animate.Disabled = true
end

    local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart

    -- Create new BodyVelocity and BodyGyro instances
    local BV = Instance.new("BodyVelocity", HumanoidRP)
    local BG = Instance.new("BodyGyro", HumanoidRP)

    -- Set the MaxForce to a high value
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

    -- Set the velocity to make the character ascend faster
    BV.Velocity = Vector3.new(0, 3, 0) -- Adjust the y-value as needed for desired speed

    -- Configure the BodyGyro
    game:GetService('RunService').RenderStepped:Connect(function()
        BG.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
        BG.D = 5000
        BG.P = 100000
        BG.CFrame = game.Workspace.CurrentCamera.CFrame
    end)
end

-- Function to stop ascending movement
local function stopAscendingMovement()
    local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart

    -- Check if BodyVelocity exists and destroy it
    if HumanoidRP:FindFirstChildOfClass("BodyVelocity") then
        HumanoidRP:FindFirstChildOfClass("BodyVelocity"):Destroy()
    end

    -- Check if BodyGyro exists and destroy it
    if HumanoidRP:FindFirstChildOfClass("BodyGyro") then
        HumanoidRP:FindFirstChildOfClass("BodyGyro"):Destroy()
    end
end

-- Function to send chat messages
local function sendChatMessage(message)
    local chatEvents = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents
    chatEvents.SayMessageRequest:FireServer(message, "All")
end

-- Function to toggle the spin animation, send messages, and stop ascending
local function toggleAnimationAndMessages()
    -- Start ascending the character
    moveCharacterUp()

    -- Play spin animation after 0.1 second
    wait(0.1)
    playSpinAnimation()

    -- Send messages with delays
    wait(0.5)
    sendChatMessage("üéØ Target acquisition in progress, meticulously scanning the coordinates for optimal precision.")
    wait(2)
    sendChatMessage("üîç Scanning the coordinates to pinpoint exact target location with utmost accuracy.")
    wait(2)
    sendChatMessage("üöÄ Deploying... Engaging systems for swift and decisive action.")
    wait(1)

    -- Stop spin animation and ascending movement
    stopSpinAnimation()
    stopAscendingMovement()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if character.Animate then
    character.Animate.Disabled = false
end

    -- Signal that this function has completed
    return true
end



-- Call the toggleAnimationAndMessages function and use a coroutine
local function startAnimationsAndMessages()
    local success = toggleAnimationAndMessages()

    -- Check if success is true before proceeding
    if success then
        local chatEvents = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents
        print("Starting...")
        
        -- Add your new script logic here

        -- Example of new script functionality

    else
        local chatEvents = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents
        chatEvents.SayMessageRequest:FireServer("‚ùå First script encountered an error.", "All")
    end
end

-- Start the animations and messages coroutine
startAnimationsAndMessages()

-- Additional Script (Runs after the existing script)

local function randomString()
    local length = 10
    local charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local result = ""
    for i = 1, length do
        local index = math.random(1, #charset)
        result = result .. string.sub(charset, index, index)
    end
    return result
end

local function getRoot(character)
    return character:FindFirstChild("HumanoidRootPart") or character:FindFirstChildWhichIsA("BasePart")
end

local velocityHandlerName = randomString()
local gyroHandlerName = randomString()
local mfly1
local mfly2
local FLYING = false
local iyflyspeed = 50
local vehicleflyspeed = 50
local TARGET_PLAYER = nil
local track = nil  -- Track for animation

-- Load the animation
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://181526230"

-- Function to play the animation
local function playAnimation(character)
    if character and character:FindFirstChild("Humanoid") then
        track = character.Humanoid:LoadAnimation(Anim)
        track:Play(.1, 1, 1)
    end
end

-- Function to stop the animation
local function stopAnimation()
    if track then
        track:Stop()
    end
end

local unmobileflyComplete = Instance.new("BindableEvent")

local function unmobilefly(speaker)
    pcall(function()
        FLYING = false
        local root = getRoot(speaker.Character)
        if root:FindFirstChild(velocityHandlerName) then
            root:FindFirstChild(velocityHandlerName):Destroy()
        end
        if root:FindFirstChild(gyroHandlerName) then
            root:FindFirstChild(gyroHandlerName):Destroy()
        end
        if speaker.Character:FindFirstChildWhichIsA("Humanoid") then
            speaker.Character:FindFirstChildWhichIsA("Humanoid").PlatformStand = false
        end
        if mfly1 then mfly1:Disconnect() end
        if mfly2 then mfly2:Disconnect() end
        stopAnimation()  -- Stop animation when flying stops
    end)

    -- Fire event to signal completion of unmobilefly
    unmobileflyComplete:Fire()
end

-- Function to reset the completion event for multiple executions
local function resetUnmobileflyComplete()
    unmobileflyComplete:Reset()
end

local function mobilefly(speaker, vfly)
    unmobilefly(speaker)
    FLYING = true

    local root = getRoot(speaker.Character)
    local camera = workspace.CurrentCamera
    local v3none = Vector3.new()
    local v3zero = Vector3.new(0, 0, 0)
    local v3inf = Vector3.new(9e9, 9e9, 9e9)

    local controlModule = require(speaker.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
    local bv = Instance.new("BodyVelocity")
    bv.Name = velocityHandlerName
    bv.Parent = root
    bv.MaxForce = v3zero
    bv.Velocity = v3zero

    local bg = Instance.new("BodyGyro")
    bg.Name = gyroHandlerName
    bg.Parent = root
    bg.MaxTorque = v3inf
    bg.P = 1000
    bg.D = 50

    mfly1 = speaker.CharacterAdded:Connect(function()
        local bv = Instance.new("BodyVelocity")
        bv.Name = velocityHandlerName
        bv.Parent = root
        bv.MaxForce = v3zero
        bv.Velocity = v3zero

        local bg = Instance.new("BodyGyro")
        bg.Name = gyroHandlerName
        bg.Parent = root
        bg.MaxTorque = v3inf
        bg.P = 1000
        bg.D = 50
    end)

    mfly2 = RunService.RenderStepped:Connect(function()
        root = getRoot(speaker.Character)
        camera = workspace.CurrentCamera
        if speaker.Character:FindFirstChildWhichIsA("Humanoid") and root and root:FindFirstChild(velocityHandlerName) and root:FindFirstChild(gyroHandlerName) then
            local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
            local VelocityHandler = root:FindFirstChild(velocityHandlerName)
            local GyroHandler = root:FindFirstChild(gyroHandlerName)

            VelocityHandler.MaxForce = v3inf
            GyroHandler.MaxTorque = v3inf
            if not vfly then humanoid.PlatformStand = true end
            GyroHandler.CFrame = camera.CoordinateFrame
            VelocityHandler.Velocity = v3none

            local direction = controlModule:GetMoveVector()

            if TARGET_PLAYER then
                local targetCharacter = TARGET_PLAYER.Character
                if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                    local targetPosition = targetCharacter.HumanoidRootPart.Position
                    local currentPosition = root.Position
                    local moveDirection = (targetPosition - currentPosition).unit
                    VelocityHandler.Velocity = moveDirection * ((vfly and vehicleflyspeed or iyflyspeed) * 50)
                    
                    -- Check distance to target
                    local distance = (targetPosition - currentPosition).Magnitude
                    if distance <= 1 then
                        unmobilefly(speaker)
                    end
                else
                    if direction.X > 0 then
                        VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
                    end
                    if direction.X < 0 then
                        VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
                    end
                    if direction.Z > 0 then
                        VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
                    end
                    if direction.Z < 0 then
                        VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
                    end
                end
            end
        end
    end)

    -- Play animation when flying starts (if TARGET_PLAYER exists)
    if TARGET_PLAYER then
        playAnimation(speaker.Character)
    end
end

local function flyCommand(args, speaker)
    if args[2] then
        local targetPlayer = game.Players:FindFirstChild(args[2])
        if targetPlayer then
            TARGET_PLAYER = targetPlayer
            mobilefly(speaker, false)
            if args[1] and tonumber(args[1]) then
                iyflyspeed = tonumber(args[1])
            end
        else
            TARGET_PLAYER = nil
            print("Player '" .. args[2] .. "' is not in the server or does not exist.")
            unmobilefly(speaker)  -- Ensure animation stops if player not found
        end
    end
end

local speaker = game.Players.LocalPlayer
local args = {0.7, TextBox.Text}  -- Example speed value and target username
flyCommand(args, speaker)

-- Check distance periodically to stop animation
RunService.RenderStepped:Connect(function()
    if TARGET_PLAYER then
        local root = getRoot(speaker.Character)
        local targetCharacter = TARGET_PLAYER.Character
        if root and targetCharacter then
            local currentPosition = root.Position
            local targetPosition = targetCharacter.HumanoidRootPart.Position
            local distance = (targetPosition - currentPosition).Magnitude
            if distance <= 1 then
                unmobilefly(speaker)
            end
        end
    end
end)

-- Wait for unmobilefly completion event
local function waitForUnmobileflyCompletion()
    return unmobileflyComplete.Event:Wait()
end

-- Function to execute Script 2 logic after unmobilefly completes
local function executeScript2()
    -- Wait for unmobilefly to complete before proceeding
    waitForUnmobileflyCompletion()

    local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

-- Function to check if a player is using R15 rig type
local function isR15(player)
    return player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R15
end

-- Function to find a player by username
local function getPlayerByUsername(username)
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name == username then
            return player
        end
    end
    return nil
end

-- Replace "Yours Username Here" with the username you want to target
local targetUsername = TextBox.Text

-- Find the player object based on the username
local targetPlayer = getPlayerByUsername(targetUsername)

-- Check if the player exists in the game
if targetPlayer then
    -- Handle case where player leaves the game while script is running
    local playerLeftConnection
    playerLeftConnection = Players.PlayerRemoving:Connect(function(player)
        if player == targetPlayer then
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("‚ùå Error: The targeted player has left the game.", "All")
            playerLeftConnectiosconnect()
            return
        end
    end)

    -- Load appropriate animation based on player's rig type
    local bangAnim = Instance.new("Animation")
    if not isR15(Players.LocalPlayer) then
        bangAnim.AnimationId = "rbxassetid://148840371"  -- Animation ID for non-R15
    else
        bangAnim.AnimationId = "rbxassetid://5918726674"  -- Animation ID for R15
    end

    -- Play the animation on the local player's character
    local bang = Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(bangAnim)
    bang:Play(.1, 1, 1)

    -- Set up synchronization loop to move local player towards target player's head position
    local bangLoop
    bangLoop = RunService.Stepped:Connect(function()
        pcall(function()
            if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local otherRoot = targetPlayer.Character.Head
                Players.LocalPlayer.Character.HumanoidRootPart.CFrame = otherRoot.CFrame * CFrame.new(0, 1, -1.1)
                local charPos = Players.LocalPlayer.Character.PrimaryPart.Position
                local tPos = targetPlayer.Character:FindFirstChild("HumanoidRootPart").Position
                local TPos = Vector3.new(tPos.X, charPos.Y, tPos.Z)
                local newCFrame = CFrame.new(charPos, TPos)
                Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCFrame)
            end
        end)
    end)

local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
local BV = Instance.new("BodyVelocity",HumanoidRP)
local BG = Instance.new("BodyGyro",HumanoidRP)

BV.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
game:GetService('RunService').RenderStepped:connect(function()
    BG.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
    BG.D = 5000
    BG.P = 100000
    BG.CFrame = game.Workspace.CurrentCamera.CFrame
end)

    -- Messages during animation with adjusted speeds and durations
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("–°–ú–ûN–í”Ä–¢–°–ù,–ÖU–°–ö–¢–ù–ê–¢–°‚Å•‚Å•‚Å•‚Å•OCK", "All")
    bang:AdjustSpeed(7)  -- Adjust speed after the first message
    wait(3)

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("G–û–ûDG”ÄRL..–í–ï–ê–ù–û–ïF–ûR–†–ê–†”Ä,–í–ï–êGR–ï–ê–¢–í”Ä–¢–°–ù..", "All")
    bang:AdjustSpeed(10)  -- Adjust speed after the second message
    wait(2)

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("–ù–ûLY–Ö–ù”Ä–¢”Ä–ú–í–ûU–¢–¢–û–°U–ú–ú!!", "All")
    bang:AdjustSpeed(13)  -- Adjust speed after the third message
    wait(3)

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("–íOUT‚Å•‚Å•T‚Å•‚Å•–êBUZZMYF‚Å•‚Å•A‚Å•‚Å•T‚Å•‚Å•–ê‚Å•‚Å•S‚Å•–Ö–°‚Å•‚Å•‚Å•‚Å•OCK", "All")
    bang:AdjustSpeed(15)  -- Adjust speed after the fourth message
    wait(2)

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("–ê–ù–ù–ù–Ö–ù”Ä–¢...", "All")
    bang:AdjustSpeed(16)  -- Adjust speed after the fifth message
    wait(3)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local function enableSwimmingForPlayer(player)
    if not swimming and player and player.Character and player.Character:FindFirstChildWhichIsA("Humanoid") then
        local oldgrav = workspace.Gravity
        workspace.Gravity = 0
        local function swimDied()
            workspace.Gravity = oldgrav
            swimming = false
        end
        local Humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
        gravReset = Humanoid.Died:Connect(swimDied)
        local enums = Enum.HumanoidStateType:GetEnumItems()
        table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
        for i, v in pairs(enums) do
            Humanoid:SetStateEnabled(v, false)
        end
        Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
        swimbeat = RunService.Heartbeat:Connect(function()
            pcall(function()
                player.Character.HumanoidRootPart.Velocity = ((Humanoid.MoveDirection ~= Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and player.Character.HumanoidRootPart.Velocity or Vector3.new())
            end)
        end)
        swimming = true
    end
end

-- Replace 'LocalPlayer' with the appropriate way to get the player who executed the script
local player = Players.LocalPlayer
enableSwimmingForPlayer(player)

    -- Set the animation speed to 0 after some time
    bang:AdjustSpeed(0)
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("*—Å‚Å•‚Å•‚Å•‚Å•um‚Å•‚Å•‚Å•‚Å•—ï ‚Å•‚Å•–∞‚Å•‚Å•l‚Å•‚Å•–æt‚Å•‚Å•*", "All")

wait(4)

        local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
if HumanoidRP:FindFirstChildOfClass("BodyVelocity") then
    HumanoidRP:FindFirstChildOfClass("BodyVelocity"):Destroy()
end
if HumanoidRP:FindFirstChildOfClass("BodyGyro") then
    HumanoidRP:FindFirstChildOfClass("BodyGyro"):Destroy()
end

    -- Clean up animations and connections after animation ends
    bangLoop:Disconnect()
    bang:Stop()
    bangAnim:Destroy()
    playerLeftConnection:Disconnect()

else
    -- If no player was found with the specified username, display an error message
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("‚ùå Error: Target player not found.", "All")
end

-- Function to disable swimming for the local player
local function disableSwimmingForPlayer(player)
    if player and player.Character and player.Character:FindFirstChildWhichIsA("Humanoid") then
        local Humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
        
        -- Restore gravity
        Workspace.Gravity = 196.2
        
        -- Re-enable all humanoid states
        local enums = Enum.HumanoidStateType:GetEnumItems()
        for _, v in pairs(enums) do
            Humanoid:SetStateEnabled(v, true)
        end
        
        -- Disconnect any remaining connections
        if gravReset then
            gravReset:Disconnect()
            gravReset = nil
        end
        
        if swimbeat then
            swimbeat:Disconnect()
            swimbeat = nil
        end
        
        swimming = false
    end
end

-- Replace 'LocalPlayer' with the appropriate way to get the player who executed the script
local player = Players.LocalPlayer
disableSwimmingForPlayer(player)

    print("Script 2 starting after unmobilefly completion")

    -- Example: Perform actions or functions after unmobilefly completes
    wait(0.1)
    print("Script 2 continues...")
end

-- Call executeScript2 to start Script 2 after unmobilefly
executeScript2()

        print("Start button clicked")
    end)
end

-- Call the function to create the GUI
createGui()
