local kickPlayers = {
    "testing",
    "testing",
    "PlayerName3"
}

-- Function to check if a player should be kicked
local function shouldKickPlayer(playerName)
    for _, kickName in ipairs(kickPlayers) do
        if playerName == kickName then
            print("Player " .. playerName .. " is on the kick list.")
            return true
        end
    end
    print("Player " .. playerName .. " is not on the kick list.")
    return false
end

-- Get the local player
local player = game.Players.LocalPlayer

-- Check if the local player should be kicked
if shouldKickPlayer(player.Name) then
    -- Kick the player
    player:Kick("Be notified: https://discord.com/invite/xUqmQYv5Hp")
else
    


-- Instances:
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local TextButton = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local TextLabel_2 = Instance.new("TextLabel")
local TextLabel_3 = Instance.new("TextLabel")
local TextButton_2 = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local TextButton_3 = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local TextButton_4 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local TextButton_5 = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local TextButton_6 = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")

--Properties:
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, -Frame.Size.X.Offset / 2, 0, 0)
Frame.Size = UDim2.new(0, 239, 0, 258)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 0.990
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.0917016193, 0, -0.00302029401, 0)
TextLabel.Size = UDim2.new(0, 195, 0, 15)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Start Button"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextSize = 14.000

UICorner.Parent = Frame

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.0794976503, 0, 0.0542635657, 0)
TextButton.Size = UDim2.new(0, 200, 0, 33)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "START"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextSize = 20.000

UICorner_2.Parent = TextButton

TextLabel_2.Parent = Frame
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 0.990
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.0791493207, 0, 0.179150254, 0)
TextLabel_2.Size = UDim2.new(0, 195, 0, 15)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Loading Button"
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 14.000

TextLabel_3.Parent = Frame
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 0.990
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(0.0917016193, 0, 0.403100789, 0)
TextLabel_3.Size = UDim2.new(0, 195, 0, 16)
TextLabel_3.Font = Enum.Font.SourceSans
TextLabel_3.Text = "Error Buttons"
TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.TextSize = 20.000

TextButton_2.Parent = Frame
TextButton_2.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.BorderSizePixel = 0
TextButton_2.Position = UDim2.new(0.0753135532, 0, 0.236434102, 0)
TextButton_2.Size = UDim2.new(0, 200, 0, 33)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = "Loading"
TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.TextSize = 20.000

UICorner_3.Parent = TextButton_2

TextButton_3.Parent = Frame
TextButton_3.BackgroundColor3 = Color3.fromRGB(0, 0, 127)
TextButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_3.BorderSizePixel = 0
TextButton_3.Position = UDim2.new(0.0794976503, 0, 0.496124029, 0)
TextButton_3.Size = UDim2.new(0, 200, 0, 33)
TextButton_3.Font = Enum.Font.SourceSans
TextButton_3.Text = "Manually Stopped"
TextButton_3.TextColor3 = Color3.fromRGB(170, 0, 0)
TextButton_3.TextSize = 20.000

UICorner_4.Parent = TextButton_3

TextButton_4.Parent = Frame
TextButton_4.BackgroundColor3 = Color3.fromRGB(0, 0, 127)
TextButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_4.BorderSizePixel = 0
TextButton_4.Position = UDim2.new(0.0794976503, 0, 0.670542657, 0)
TextButton_4.Size = UDim2.new(0, 200, 0, 33)
TextButton_4.Font = Enum.Font.SourceSans
TextButton_4.Text = "Script Error"
TextButton_4.TextColor3 = Color3.fromRGB(170, 0, 0)
TextButton_4.TextSize = 20.000

UICorner_5.Parent = TextButton_4

TextButton_5.Parent = Frame
TextButton_5.BackgroundColor3 = Color3.fromRGB(0, 0, 127)
TextButton_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_5.BorderSizePixel = 0
TextButton_5.Position = UDim2.new(0.0794976503, 0, 0.829457343, 0)
TextButton_5.Size = UDim2.new(0, 200, 0, 33)
TextButton_5.Font = Enum.Font.SourceSans
TextButton_5.Text = "Invalid Target"
TextButton_5.TextColor3 = Color3.fromRGB(170, 0, 0)
TextButton_5.TextSize = 20.000

UICorner_6.Parent = TextButton_5

local executed = false

local function toggleFrame()
    Frame.Visible = not Frame.Visible
end

TextButton_6.Parent = ScreenGui
TextButton_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_6.BorderSizePixel = 0
TextButton_6.Position = UDim2.new(0.776152134, 0, 0, 0)
TextButton_6.Size = UDim2.new(0, 45, 0, 45)
TextButton_6.Font = Enum.Font.SourceSans
TextButton_6.Text = "Here!"
TextButton_6.TextColor3 = Color3.fromRGB(0, 0, 127)
TextButton_6.TextSize = 20.000
TextButton_6.TextWrapped = true

UICorner_7.Parent = TextButton_6

local UserInputService = game:GetService("UserInputService")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    TextButton_6.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TextButton_6.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = TextButton_6.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TextButton_6.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

local function executeError(errorMessage)
    if not executed then
        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(errorMessage, "All")
        executed = true
    end
end

TextButton.MouseButton1Click:Connect(function()
   local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local function getRoot(char)
    local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
    return rootPart
end

local spinSpeed = 140

local stareDuration = 2 -- Stare duration in seconds

local function stopSpin()
    for _, v in pairs(getRoot(game.Players.LocalPlayer.Character):GetChildren()) do
        if v.Name == "Spinning" then
            v:Destroy()
        end
    end
end

local function getPlayerInFront()
    local closestPlayer = nil
    local closestAngle = math.huge

    local charPos = Players.LocalPlayer.Character.HumanoidRootPart.Position
    local forwardDirection = Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local directionToPlayer = (player.Character.HumanoidRootPart.Position - charPos).unit

            -- Calculate the angle between the player's forward direction and the direction to the other player
            local angle = math.acos(forwardDirection:Dot(directionToPlayer))

            -- Check if this player is within the detection radius
            local distance = (player.Character.HumanoidRootPart.Position - charPos).magnitude
            if angle < closestAngle and distance < 13 and player.Character.HumanoidRootPart.Position.Y - charPos.Y < 500 then
                closestAngle = angle
                closestPlayer = player
            end
        end
    end

    return closestPlayer
end

local function startStare(target)
    local stareLoop

    local function stareAtTarget()
        if Players.LocalPlayer.Character.PrimaryPart and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            local chrPos = Players.LocalPlayer.Character.PrimaryPart.Position
            local tPos = target.Character:FindFirstChild("HumanoidRootPart").Position
            local modTPos = Vector3.new(tPos.X, chrPos.Y, tPos.Z)
            local newCF = CFrame.new(chrPos, modTPos)
            Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCF)
        elseif not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
            stareLoop:Disconnect()
        end
    end

    stareLoop = RunService.RenderStepped:Connect(stareAtTarget)
    
    -- Set gravity to 0 during stare
    Workspace.Gravity = 0
    
    wait(stareDuration)
    stareLoop:Disconnect()
end

-- Start spinning
local Spin = Instance.new("BodyAngularVelocity")
Spin.Name = "Spinning"
Spin.Parent = getRoot(game.Players.LocalPlayer.Character)
Spin.MaxTorque = Vector3.new(0, math.huge, 0)
Spin.AngularVelocity = Vector3.new(0, spinSpeed, 0)

-- Messages during spinning
ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hold onto your hats, folks! The ѕ⁥⁥⁥е⁥⁥⁥х toу finder is revving up its engines... 🚀", "All")
wait(2)
ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("🔎 Scanning the cosmos for the chosen one... 🔍", "All")
wait(3)
ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Eureka! Target locked and loaded! 🎯", "All")

wait(1)
stopSpin()


-- Get the player in front
local playerInFront = getPlayerInFront()
if playerInFront then
    -- Start staring at the player in front
    startStare(playerInFront)
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("🎯New Target: " .. playerInFront.Name, "All")

    -- Bang Script using the target from the stare part

    local function r15(player)
        return player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R15
    end

    local function getPlr(username)
        for _, player in pairs(Players:GetPlayers()) do
            if player.Name == username then
                return player
            end
        end
    end

    local Username = playerInFront.Name

    local players = getPlr(Username)
    if not players then
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("❌ Error: The player has left the game.", "All")
        return -- Stop the script
    end

-- Add any additional code that sends messages below, using the sendMessage function
-- sendMessage("Another message", "All")

    local playerLeftConnection
    playerLeftConnection = Players.PlayerRemoving:Connect(function(player)
        if player == players then
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("❌ Error: The player has left the game.", "All")
            -- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Variables
local playerLeftConnection
local bangLoop, bang, bangAnim, bangDied
local oldgrav, swimming, gravReset, swimbeat
local playerHasLeft = false -- Flag to indicate if the player has left

-- Function to disable swimming for a player
local function disableSwimmingForPlayer(player)
    if swimming and player and player.Character and player.Character:FindFirstChildWhichIsA("Humanoid") then
        local Humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
        
        -- Restore gravity
        workspace.Gravity = oldgrav
        
        -- Re-enable all humanoid states
        local enums = Enum.HumanoidStateType:GetEnumItems()
        for _, v in pairs(enums) do
            Humanoid:SetStateEnabled(v, true)
        end
        
        -- Disconnect the Died event connection
        if gravReset then
            gravReset:Disconnect()
            gravReset = nil
        end
        
        -- Disconnect the Heartbeat event connection
        if swimbeat then
            swimbeat:Disconnect()
            swimbeat = nil
        end
        
        swimming = false
    end
end

-- Function to send a message if the player has not left
local function sendMessage(message, channel)
    if not playerHasLeft then
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, channel)
    end
end

-- Player removing event connection
playerLeftConnection = Players.PlayerRemoving:Connect(function(player)
    if player == Players.LocalPlayer then
        -- Set the flag indicating the player has left
        playerHasLeft = true

        -- Notify that the player has left the game
        sendMessage("❌ Error: The player has left the game.", "All")
        
        -- Disconnect the player left connection
        playerLeftConnection:Disconnect()
        
        -- Remove BodyVelocity and BodyGyro from HumanoidRootPart
        local HumanoidRP = player.Character.HumanoidRootPart
        if HumanoidRP:FindFirstChildOfClass("BodyVelocity") then
            HumanoidRP:FindFirstChildOfClass("BodyVelocity"):Destroy()
        end
        if HumanoidRP:FindFirstChildOfClass("BodyGyro") then
            HumanoidRP:FindFirstChildOfClass("BodyGyro"):Destroy()
        end
        
        -- Stop and disconnect other elements
        if bangLoop then
            bangLoop:Disconnect()
        end
        if bang then
            bang:Stop()
        end
        if bangAnim then
            bangAnim:Destroy()
        end
        if bangDied then
            bangDied:Disconnect()
        end
        
        -- Call function to disable swimming
        disableSwimmingForPlayer(player)
        
        -- Stop the script
        return
    end
end)

    local bangAnim = Instance.new("Animation")
    if not r15(game.Players.LocalPlayer) then
        bangAnim.AnimationId = "rbxassetid://148840371"
    else
        bangAnim.AnimationId = "rbxassetid://5918726674"
    end
    local bang = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):LoadAnimation(bangAnim)
    bang:Play(.1, 1, 1)

    local bangplr = players.Name
    local bangDied = game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').Died:Connect(function()
        bangLoop = bangLoop:Disconnect()
        bang:Stop()
        bangAnim:Destroy()
        bangDied:Disconnect()
        playerLeftConnection:Disconnect()
        end)
    local bangOffset = CFrame.new(0, 1, -1.1)
    local bangLoop = RunService.Stepped:Connect(function()
        pcall(function()
            local otherRoot = game.Players[bangplr].Character.Head
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = otherRoot.CFrame * bangOffset
            local charPos = game.Players.LocalPlayer.Character.PrimaryPart.Position
            local tPos = players.Character:FindFirstChild("HumanoidRootPart").Position
            local TPos = Vector3.new(tPos.X, charPos.Y, tPos.Z)
            local newCFrame = CFrame.new(charPos, TPos)
            game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(newCFrame)
        end)
    end)

local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
local BV = Instance.new("BodyVelocity",HumanoidRP)
local BG = Instance.new("BodyGyro",HumanoidRP)

BV.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
game:GetService('RunService').RenderStepped:connect(function()
    BG.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
    BG.D = 5000
    BG.P = 100000
    BG.CFrame = game.Workspace.CurrentCamera.CFrame
end)

    -- Messages during bang animation with adjusted speeds and durations
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("СМОN ВӀТСН, ЅUСК ТНАТ СОСК", "All")
    bang:AdjustSpeed(7)  -- Adjust speed to 7 after the first message
    wait(3)  -- Duration for the first message

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("GООD GӀRL.. ВЕ А НОЕ FОR РАРӀ, ВЕ А GRЕАТ ВӀТСН..", "All")
    bang:AdjustSpeed(10)  -- Adjust speed to 10 after the second message
    wait(2)  -- Duration for the second message

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("НОLY ЅНӀТ ӀМ ВОUТ ТО СUММ!!", "All")
    bang:AdjustSpeed(13)  -- Adjust speed to 13 after the third message
    wait(3)  -- Duration for the third message

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("ВОUТТА ВUZZ МҮ FАТ АЅЅ СОСК", "All")
    bang:AdjustSpeed(15)  -- Adjust speed to 15 after the fourth message
    wait(2)  -- Duration for the fourth message

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("АННН ЅНӀТ...", "All")
    bang:AdjustSpeed(16)  -- Adjust speed to 16 after the fifth message
    wait(3)  -- Duration for the fifth message

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local function enableSwimmingForPlayer(player)
    if not swimming and player and player.Character and player.Character:FindFirstChildWhichIsA("Humanoid") then
        local oldgrav = workspace.Gravity
        workspace.Gravity = 0
        local function swimDied()
            workspace.Gravity = oldgrav
            swimming = false
        end
        local Humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
        gravReset = Humanoid.Died:Connect(swimDied)
        local enums = Enum.HumanoidStateType:GetEnumItems()
        table.remove(enums, table.find(enums, Enum.HumanoidStateType.None))
        for i, v in pairs(enums) do
            Humanoid:SetStateEnabled(v, false)
        end
        Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
        swimbeat = RunService.Heartbeat:Connect(function()
            pcall(function()
                player.Character.HumanoidRootPart.Velocity = ((Humanoid.MoveDirection ~= Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and player.Character.HumanoidRootPart.Velocity or Vector3.new())
            end)
        end)
        swimming = true
    end
end

-- Replace 'LocalPlayer' with the appropriate way to get the player who executed the script
local player = Players.LocalPlayer
enableSwimmingForPlayer(player)

    -- Set the animation speed to 0 after some time
    bang:AdjustSpeed(0)
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("*с⁥⁥⁥u⁥⁥⁥m⁥⁥⁥⁥ѕ alot*", "All")

    -- Stop the bang animation after a waiting time of 1 second
    wait(4)
        local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
if HumanoidRP:FindFirstChildOfClass("BodyVelocity") then
    HumanoidRP:FindFirstChildOfClass("BodyVelocity"):Destroy()
end
if HumanoidRP:FindFirstChildOfClass("BodyGyro") then
    HumanoidRP:FindFirstChildOfClass("BodyGyro"):Destroy()
end

    bangLoop:Disconnect()
    bang:Stop()
    bangAnim:Destroy()
    bangDied:Disconnect()
    playerLeftConnection:Disconnect()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local function disableSwimmingForPlayer(player)
    if swimming and player and player.Character and player.Character:FindFirstChildWhichIsA("Humanoid") then
        local Humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
        
        -- Restore gravity
        workspace.Gravity = oldgrav
        
        -- Re-enable all humanoid states
        local enums = Enum.HumanoidStateType:GetEnumItems()
        for i, v in pairs(enums) do
            Humanoid:SetStateEnabled(v, true)
        end
        
        -- Disconnect the Died event connection
        if gravReset then
            gravReset:Disconnect()
            gravReset = nil
        end
        
        -- Disconnect the Heartbeat event connection
        if swimbeat then
            swimbeat:Disconnect()
            swimbeat = nil
        end
        
        swimming = false
    end
end

-- Replace 'LocalPlayer' with the appropriate way to get the player who executed the script
local player = Players.LocalPlayer
disableSwimmingForPlayer(player)

    -- Reset gravity to normal after the bang animation stops
    Workspace.Gravity = 196.2
else
    -- If no player was found in front, display an error message
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("❌ Error: No player detected in front.", "All")
end
end)

TextButton_2.MouseButton1Click:Connect(function()
    -- Function to send a chat message
local function sendChatMessage(message)
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
end

-- First loading message
sendChatMessage("🔄 Loading resources... Please wait as we prepare everything for you.")
wait(2)

-- Second loading message
sendChatMessage("🔄 Almost there... Optimizing your experience, just a moment longer.")
wait(2)

-- Third loading message
sendChatMessage("🔄 Loading complete! Thank you for your patience. Enjoy the game!")
end)

TextButton_3.MouseButton1Click:Connect(function()
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("❌ Error: Manually Stopped. The process has been halted manually.", "All")
        end)

TextButton_4.MouseButton1Click:Connect(function()

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("❌ Error: Script Error. An unexpected error occurred during the process.", "All")
        end)

TextButton_5.MouseButton1Click:Connect(function()
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("❌ Error: Invalid Target. Please select a valid target.", "All")
end)

TextButton_6.MouseButton1Click:Connect(function()
toggleFrame()
end)
    print(player.Name .. " has successfully loaded the game.")
end
